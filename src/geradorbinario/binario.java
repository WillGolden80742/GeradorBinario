/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package geradorbinario;

import com.formdev.flatlaf.FlatDarkLaf;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author will
 */
public class binario extends javax.swing.JFrame {

    /**
     * Creates new form Vigene
     */
    public binario() {
        initComponents();
        setLocation(200, 200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        cifrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binario");

        gerar.setText("Gerar");
        gerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarActionPerformed(evt);
            }
        });

        input.setColumns(20);
        input.setRows(5);
        jScrollPane1.setViewportView(input);

        jLabel1.setText("Resultado");

        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        cifrar.setText("Interpretar");
        cifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cifrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(cifrar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gerar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gerar)
                    .addComponent(cifrar)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cifrarActionPerformed
        output.setText("");
        String inputLocal = input.getText();
        input.setText(input.getText().replaceAll(String.valueOf((char) 32), ""));
        int inputSize = input.getText().length();
        String bin = input.getText().replaceAll("1","").replaceAll("0","");
        if(inputSize % 8 == 0 && bin.length() == 0) {
            new Thread(lerB).start();
        } else {
            input.setText(inputLocal);
        }
    }//GEN-LAST:event_cifrarActionPerformed

    private void gerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarActionPerformed
        output.setText("");
        new Thread(gerarB).start();
    }//GEN-LAST:event_gerarActionPerformed

    private final Runnable lerB = new Runnable() {
        @Override
        public void run() {
            int cont = input.getText().length();
            String text = input.getText();

            char c[] = new char[cont];

            for (int i = 0; i < cont; i++) {
                c[i] = text.charAt(i);
            }

            for (int i = 0; i < cont;) {
                int bin = 128;
                int value = 0;
                for (int j = 0; j < 8; j++) {
                    if (c[i + j] == '1') {
                        value += bin;
                    }
                    bin /= 2;
                }
                output.append(String.valueOf((char) value));
                i += 8;
            }
        }
    };

    private final Runnable gerarB = new Runnable() {
        @Override
        public void run() {
            int cont = input.getText().length(), ascii, casas = 1, binarioCasas = 0, contZeros = 0;
            String text = input.getText();
            int binario[] = new int[cont];
            char c[] = new char[cont];

            for (int i = 0; i < cont; i++) {
                c[i] = text.charAt(i);
            }

            for (int i = 0; i < cont; i++) {
                ascii = (c[i] < 0) ? 256 + c[i] : c[i];
                casas = 1;
                binarioCasas = 0;
                while (ascii != 0) {
                    binarioCasas += (ascii % 2) * casas;
                    binario[i] = binarioCasas;
                    ascii /= 2;
                    casas *= 10;
                    contZeros++;
                }
                for (int it = 0; it < 8 - contZeros; it++) {
                    output.append("0");
                }
                contZeros = 0;
                output.append(String.valueOf(binario[i]));
            }
        }
    };

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize LaF");
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new binario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cifrar;
    private javax.swing.JButton gerar;
    private javax.swing.JTextArea input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
}
